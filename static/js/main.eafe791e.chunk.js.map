{"version":3,"sources":["components/Current.js","components/NextWeek.js","App.js","reportWebVitals.js","index.js"],"names":["Current","readData","setUnSub1Fetch","wlIn","useRef","wlSp","useState","wlInVal","setWlInVal","settings","dots","infinite","speed","slidesToShow","slidesToScroll","id","className","onSubmit","e","preventDefault","current","style","display","readOnly","classList","remove","add","placeholder","ref","onChange","value","onClick","removeAttribute","type","to","location","forecast","hourItems","dyLight","wCloud","hrIc","wIc","i","length","search","handelDay","String","Date","toGMTString","substr","src","alt","Row","Container","map","hourItem","index","CurrentProcess","NextWeek","msgs","week","dayItems","wCloudArr","dt","fnlDt","indexOf","msg","day","Col","xl","xs","NextWeekProcess","App","setReadData","unSub1Fetch","useEffect","fetch","then","response","json","data","catch","error","console","log","basename","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eafe791e.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport 'slick-carousel/slick/slick.css';\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport '../style/Current.css';\r\nimport { HiLocationMarker, HiSearch } from 'react-icons/hi';\r\nimport { FaRegCalendarAlt } from 'react-icons/fa';\r\nimport { RiWindyLine } from 'react-icons/ri';\r\nimport { CgDrop } from 'react-icons/cg';\r\nimport { WiCloud, WiDayCloudy, WiDayLightning, WiDayRainWind, WiDaySunny, WiDaySunnyOvercast, WiNightAltLightning, WiNightAltPartlyCloudy, WiNightAltRainWind, WiNightClear } from 'react-icons/wi';\r\nimport Slider from 'react-slick';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction Current({readData, setUnSub1Fetch}) {\r\n    const wlIn = useRef(null);\r\n    const wlSp = useRef(null);\r\n    \r\n    const [wlInVal, setWlInVal] = useState('');\r\n    const wlInChange = () => {\r\n        setWlInVal(wlIn.current.value);\r\n    }\r\n\r\n\r\n    const settings = {\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 3,\r\n        slidesToScroll: 1\r\n    };\r\n\r\n        \r\n    const handelSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        wlSp.current.style.display = 'none';\r\n        wlIn.current.readOnly = true;            \r\n        wlIn.current.classList.remove(\"inputActive\");\r\n        wlIn.current.classList.add(\"inputRead\");\r\n\r\n        const cityVl = wlInVal;\r\n        // console.log( wlInVal, cityVl ); \r\n        setUnSub1Fetch('https://api.weatherapi.com/v1/forecast.json?key=244694e7630a4db5bc3150225210908&q='+cityVl+'&aqi=yes&days=10');        \r\n    }\r\n\r\n    const CurrentProcess = (readData) => {\r\n        \r\n        if(readData.location && readData.current && readData.forecast){\r\n\r\n            const hourItems = [readData['forecast']['forecastday'][0]['hour']][0];\r\n\r\n            // handel Weather Icons\r\n            let dyLight = '',   wCloud = '',    hrIc = [],  wIc = [];\r\n            for( let i=0; i<hourItems.length; i++ ){\r\n                ( hourItems[i]['condition']['icon'].search('night') !== -1 ) ? dyLight = 'night' : dyLight = 'day';\r\n                wCloud = hourItems[i]['condition']['text'];\r\n                hrIc = [ ...hrIc, ` ${dyLight} - ${wCloud} ` ];\r\n            }\r\n\r\n            for( let i=0; i<hourItems.length; i++ ){\r\n                ( hrIc[i] === \" night - Partly cloudy \" )\r\n                ? wIc[i] = < WiNightAltPartlyCloudy />\r\n                : ( hrIc[i] === \" day - Partly cloudy \" )\r\n                ? wIc[i] = < WiDayCloudy />\r\n                : ( hrIc[i] === \" day - Sunny \" )\r\n                ? wIc[i] = < WiDaySunny />\r\n                : ( hrIc[i] === \" night - Clear \" )\r\n                ? wIc[i] = < WiNightClear />\r\n                : ( hrIc[i] === \" night - Overcast \" )\r\n                ? wIc[i] = < WiDaySunnyOvercast />\r\n                : ( hrIc[i] === \" day - Patchy rain possible \" )\r\n                ? wIc[i] = < WiDayRainWind />\r\n                : ( hrIc[i] === \" night - Patchy rain possible \" )\r\n                ? wIc[i] = < WiNightAltRainWind />\r\n                : ( hrIc[i] === \" day - Thundery outbreaks possible \" )\r\n                ? wIc[i] = < WiDayLightning />\r\n                : ( hrIc[i] === \" night - Thundery outbreaks possible \" )\r\n                ? wIc[i] = < WiNightAltLightning />\r\n                : wIc[i] = < WiCloud />;\r\n            }\r\n            // handel Weather Icons\r\n\r\n            const handelDay = (String) => {\r\n                let dat = String;\r\n                let dt = new Date( dat );\r\n                let fnlDt = dt.toGMTString().substr(0, 11);\r\n                return fnlDt;\r\n            }\r\n\r\n            return(                \r\n                <>\r\n                    <section className={'weatherToday'}>\r\n                        <img src={readData['current']['condition']['icon']} alt=\"icon\"/>\r\n                        <p> {readData['current']['condition']['text']} </p>\r\n                        <p> {readData['current']['temp_c']} <sup>o</sup> </p>\r\n                        <p>\r\n                            <span> <RiWindyLine /> {readData['current']['wind_kph']} km/h </span>\r\n                            <span> <CgDrop /> {readData['current']['humidity']} % </span>\r\n                        </p>\r\n                    </section>\r\n\r\n                    <section className={'weatherHourly'}>\r\n                        <div className={'weatherHourly__days container'}>\r\n                            <Row>\r\n                                <p className={'col-4'}> { handelDay(readData['forecast']['forecastday'][0]['date']) } </p>\r\n                                <p className={'col-4'}> { handelDay(readData['forecast']['forecastday'][1]['date']) } </p>\r\n                                <p className={'col-4'}> { handelDay(readData['forecast']['forecastday'][2]['date']) } </p>\r\n                            </Row>\r\n                        </div>\r\n                        \r\n                        <Container>\r\n                            <Slider {...settings} className={'weatherHourly__hours'}>{        \r\n                                hourItems.map( (hourItem, index) => (index < hourItems.length) ? \r\n                                <div key={index} className={'weatherHourly__hours__item'}>                                 \r\n                                    {/* <p>{\r\n                                        ( index > 11 ) ? \r\n                                        hourItem['time'].substr( hourItem['time'].indexOf(\" \")+1 )+' PM' : \r\n                                        hourItem['time'].substr( hourItem['time'].indexOf(\" \")+1 )+' AM'\r\n                                    }</p> */}\r\n                                    <p>{\r\n                                        ( index+1 > 12 ) \r\n                                        ? ((index+1) - 12 <= 9) \r\n                                            ? `0${(index+1) -12}:00 PM`\r\n                                            : `${(index+1) -12 }:00 PM`                                                                                \r\n                                        : (index+1 <= 9) \r\n                                            ? `0${index+1}:00 AM`\r\n                                            : `${index+1}:00 AM`\r\n                                    }</p>\r\n                                    { wIc[index] }\r\n                                    <p> {hourItem['temp_c']} <sup>o</sup> </p>\r\n                                </div>\r\n                                :null\r\n                                )\r\n                            }</Slider>\r\n                        </Container>\r\n                    </section>\r\n                </>\r\n            )\r\n        }  \r\n    }\r\n    return (\r\n        <main id=\"current\">\r\n            <section className={'weatherNav'}>\r\n                <HiLocationMarker />\r\n                <div className={'weatherNav__location'}>\r\n                    <form onSubmit={handelSubmit}>\r\n                        <input placeholder='location..' ref={wlIn} onChange={wlInChange} onClick={() => {\r\n                            wlSp.current.style.display = 'block';\r\n                            wlIn.current.removeAttribute(\"readOnly\");\r\n                            wlIn.current.classList.remove(\"inputRead\");\r\n                            wlIn.current.classList.add(\"inputActive\"); \r\n                        }}/>\r\n                        <span ref={wlSp}></span>\r\n                        <button type='submit'> <HiSearch/> </button>\r\n                    </form>                    \r\n                </div>\r\n                <Link className=\"nav-link\" to=\"/ReactWeatherNextWeek\">\r\n                    <FaRegCalendarAlt />\r\n                </Link>                     \r\n                \r\n            </section>\r\n            { CurrentProcess(readData) }\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Current\r\n","import React  from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport 'slick-carousel/slick/slick.css';\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport '../style/NxtWeek.css';\r\nimport Slider from 'react-slick';\r\nimport { RiArrowLeftFill } from 'react-icons/ri';\r\nimport { WiCloud, WiDayCloudy, WiDayLightning, WiDayRainWind, WiDaySunny, WiDaySunnyOvercast, WiNightAltLightning, WiNightAltPartlyCloudy, WiNightAltRainWind, WiNightClear } from 'react-icons/wi';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction NextWeek({readData}) {\r\n\r\n    const msgs = [\r\n        'The wind is very strong today! This is not the time for a yacht trip',\r\n        'Dangerous sun! Take care of yourself and take advantage of UV protection',\r\n        \"If you don't want to get wet today, don't forget your umbrella!\"\r\n    ];\r\n    const week = [ 'Saturday', 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday' ];\r\n\r\n    const settings = {\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1\r\n    };\r\n\r\n    const NextWeekProcess = (readData) => {\r\n        \r\n        if(readData.location && readData.current && readData.forecast){\r\n        const dayItems = readData['forecast']['forecastday'];\r\n\r\n        // handel Weather Icons\r\n        let dyLight = '',   wCloud = '',    hrIc = [],  wIc = [], wCloudArr = [];\r\n        for( let i=0; i<dayItems.length; i++ ){\r\n            ( dayItems[i]['day']['condition']['icon'].search('night') !== -1 ) ? dyLight = 'night' : dyLight = 'day';\r\n            wCloud = dayItems[i]['day']['condition']['text'];\r\n            hrIc = [ ...hrIc, ` ${dyLight} - ${wCloud} ` ];\r\n        }\r\n\r\n        for( let i=0; i<dayItems.length; i++ ){\r\n            if( hrIc[i] === \" night - Partly cloudy \" ){\r\n                wIc[i] = < WiNightAltPartlyCloudy /> ;  wCloudArr[i] = 'dry';\r\n            }else if( hrIc[i] === \" day - Partly cloudy \" ){\r\n                wIc[i] = < WiDayCloudy /> ;             wCloudArr[i] = 'dry'; \r\n            }else if( hrIc[i] === \" day - Sunny \" ){\r\n                wIc[i] = < WiDaySunny /> ;              wCloudArr[i] = 'hot'; \r\n            }else if( hrIc[i] === \" night - Clear \" ){\r\n                wIc[i] = < WiNightClear /> ;            wCloudArr[i] = 'dry'; \r\n            }else if( hrIc[i] === \" night - Overcast \" ){\r\n                wIc[i] = < WiDaySunnyOvercast /> ;      wCloudArr[i] = 'rain'; \r\n            }else if( hrIc[i] === \" day - Patchy rain possible \" ){\r\n                wIc[i] = < WiDayRainWind /> ;           wCloudArr[i] = 'rain'; \r\n            }else if( hrIc[i] === \" night - Patchy rain possible \" ){\r\n                wIc[i] = < WiNightAltRainWind /> ;      wCloudArr[i] = 'rain'; \r\n            }else if( hrIc[i] === \" day - Thundery outbreaks possible \" ){\r\n                wIc[i] = < WiDayLightning /> ;          wCloudArr[i] = 'rain'; \r\n            }else if( hrIc[i] === \" night - Thundery outbreaks possible \" ){\r\n                wIc[i] = < WiNightAltLightning /> ;     wCloudArr[i] = 'rain'; \r\n            }else{ wIc[i] = < WiCloud />;               wCloudArr[i] = 'dry';}\r\n        }\r\n        // handel Weather Icons\r\n\r\n        const handelDay = (String) => {\r\n            let dat = String;\r\n            let dt = new Date( dat );\r\n            let fnlDt = dt.toGMTString().substr(0, dt.toGMTString().indexOf(\",\"));\r\n\r\n            for( let i=0; i<7; i++ ){\r\n                // if( week[i].substr(0,3) === fnlDt  ){ fnlDt = week[i]; break;}\r\n                if( week[i].substr(0,3) === fnlDt  ){ return week[i]; }\r\n            }\r\n\r\n            return fnlDt;\r\n        };\r\n\r\n            return(\r\n                <>\r\n                <section className={'nxtweekNav'}>\r\n                    <Link className=\"nav-link\" to=\"/ReactWeatherHome\">\r\n                        <RiArrowLeftFill />\r\n                    </Link>                     \r\n                    {/* <Link className=\"nav-link\" to=\"/\">\r\n                        <RiArrowLeftFill />\r\n                    </Link> */}\r\n                    <p> {readData['location']['name']} </p>\r\n                </section>\r\n\r\n                <Container>\r\n                    <Slider {...settings} className={'nxtweek__msgs'}>{\r\n                        msgs.map( (msg, index) => ( index < msgs.length ) ?\r\n                            <div key={index} className={'nxtweek__msgs__item'}>\r\n                                <img src={readData['current']['condition']['icon']} alt=\"weIc\" />\r\n                                <p> 10 minutes ago </p>                        \r\n                                <p> {msg} </p>\r\n                            </div>\r\n                            : null    \r\n                        )\r\n                    }</Slider>\r\n                </Container>\r\n\r\n                <h3> Next 2 Days </h3>\r\n\r\n                <Container className={'nxtweekDays'}>\r\n                    <Row>{\r\n                dayItems.map( (day, index) => ( index > 0 && index < dayItems.length ) ?\r\n                    <Col xl='6' xs='6' key={index}>\r\n                        <p><span className={`${wCloudArr[index]}`}>{wIc[index]}</span> { handelDay(day['date']) } </p>\r\n                        <p><span>maxtemp</span>{ day['day']['maxtemp_c'] }<sup>o</sup></p>\r\n                        <p><span>mintemp</span>{ day['day']['mintemp_c'] }<sup>o</sup></p>\r\n                        {/* <p> {wIc[index]} </p> */}\r\n                    </Col>\r\n                    : null    \r\n                )\r\n                }\r\n                </Row>\r\n                </Container>\r\n                </>\r\n            );\r\n        }\r\n    }\r\n\r\n    return(\r\n        <main id=\"nxtweek\">\r\n            {NextWeekProcess(readData)}\r\n        </main>\r\n    );\r\n\r\n}\r\n\r\nexport default NextWeek","import 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { useEffect, useState } from 'react';\r\nimport Current from './components/Current';\r\nimport NextWeek from './components/NextWeek';\r\n// import { BrowserRouter as Router, HashRouter, Route, Switch } from 'react-router-dom';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nfunction App() {\r\n\r\n  // Fetch date from weather api\r\n  const [readData, setReadData] = useState({});\r\n  let [unSub1Fetch, setUnSub1Fetch] = useState('');\r\n  \r\n  useEffect(() => {\r\n      if(unSub1Fetch === ''){\r\n      setUnSub1Fetch(`https://api.weatherapi.com/v1/forecast.json?key=244694e7630a4db5bc3150225210908&q=Alexandria&aqi=yes&days=10`);}\r\n\r\n      let unSub1 = fetch(unSub1Fetch)\r\n      .then( response => response.json() )\r\n      .then( data => {\r\n      setReadData( data );\r\n      }).catch( error => console.log( error ) );\r\n      // console.log( readData );\r\n      return unSub1;\r\n  }, [unSub1Fetch]);\r\n  // Fetch date from weather api\r\n      \r\n\r\n  return (\r\n    <Router basename=\"/\">\r\n    {/* <Router> */}\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route path=\"/ReactWeatherHome\" exact>\r\n            <Current readData={readData} setUnSub1Fetch={setUnSub1Fetch} />\r\n          </Route>\r\n          {/* <Route path=\"/\" exact>\r\n            <Current readData={readData} setUnSub1Fetch={setUnSub1Fetch} />\r\n          </Route> */}\r\n          <Route path=\"/ReactWeatherNextWeek\">\r\n            <NextWeek readData={readData} /> \r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    {/* </Router> */}\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <App />,\n\n  // <React.StrictMode>\n      <App />,\n  // </React.StrictMode>, \n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}